{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","http","dataList","selectedDose","selectedAge","selectedDist","districtList","name","selected","selectedDate","intTimer","refreshTime","getSlotData","getData","setInterval","distId","get","subscribe","data","filterData","console","log","centers","filter","center","sessions","length","session","vaccine","min_age_limit","push","type","fee_type","pincode","address","count","available_capacity_dose1","available_capacity_dose2","dose","age","dmy","district","time","Number","date","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","clearInterval","reloadTable","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  dataList = [];\n\n  selectedDose = 2;\n  selectedAge = 45;\n  selectedDist = 0;\n  districtList = [\n    {\n      id: 395,\n      name: \"Mumbai\",\n      selected: true\n    },\n    {\n      id: 392,\n      name: \"Thane\"\n    },\n    {\n      id: 374,\n      name: \"Sindhudurg\"\n    },\n    {\n      id: 394,\n      name: \"Palghar\"\n    },\n    {\n      id: 363,\n      name: \"Pune\"\n    }\n  ]\n  selectedDate = '28-06-2021';\n\n  intTimer: any = 0;\n  refreshTime = 10;\n\n  constructor(\n    private http: HttpClient\n  ) {\n    this.getSlotData();\n  }\n\n  ngOnInit() {\n  }\n\n  getSlotData() {\n    this.dataList = [];\n    this.getData();\n    this.intTimer = setInterval(() => {\n      this.dataList = [];\n      this.getData();\n    }, this.refreshTime * 1000);\n  }\n\n  getData() {\n    const distId = this.districtList[this.selectedDist].id;\n    this.http.get('https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict?district_id=' + distId + '&date=' + this.selectedDate)\n      .subscribe((data) => {\n        this.filterData(data)\n        console.log(this.dataList);\n      });\n  }\n\n  filterData(data) {\n    data.centers.filter((center) => {\n      if (center.sessions && center.sessions.length) {\n        center.sessions.filter((session) => {\n          if (session.vaccine === \"COVISHIELD\" && session.min_age_limit === this.selectedAge) {\n            this.dataList.push({\n              name: center.name,\n              type: center.fee_type,\n              pincode: center.pincode,\n              address: center.address,\n              count: this.selectedDose == 1 ? session.available_capacity_dose1 : session.available_capacity_dose2\n            })\n          }\n        })\n      }\n    })\n  }\n\n\n  reloadTable(dose, age, dmy, district, time) {\n    this.selectedAge = Number(age);\n    this.selectedDose = Number(dose);\n    this.selectedDist = Number(district);\n    this.refreshTime = !!time ? time : this.refreshTime;\n    if (!!dmy) {\n      const date = new Date(dmy);\n      const dd = date.getDate();\n      let mm = date.getMonth() + 1;\n      mm = mm < 10 ? Number(`0${mm}`) : mm;\n      const yyyy = date.getFullYear();\n      this.selectedDate = `${dd}-${mm}-${yyyy}`;\n    }\n    clearInterval(this.intTimer);\n    this.getSlotData();\n  }\n}\n","<div class=\"session-table\">\r\n  <div>Vaccine Slots Covieshield</div>\r\n  <div class=\"input-contianer\">\r\n    <div class=\"district-selction\">\r\n      District\r\n      <select name=\"district\" #district>\r\n        <option *ngFor=\"let dist of districtList; let idx = index;\" [value]=\"idx\" [selected]=\"dist.selected === true\">\r\n          {{dist.name}}\r\n        </option>\r\n      </select>\r\n    </div>\r\n    <div class=\"dose-container\">\r\n      Dose\r\n      <select name=\"dose\" #dose>\r\n        <option value=\"1\">Dose 1</option>\r\n        <option value=\"2\" selected>Dose 2</option>\r\n      </select>\r\n    </div>\r\n    <div class=\"date-container\">\r\n      <label>Date </label>\r\n      <input type=\"date\" name=\"dmy\" #dmy>\r\n    </div>\r\n    <div class=\"age-group-container\">\r\n      Age Group\r\n      <select name=\"dose\" #age>\r\n        <option value=\"18\">18+</option>\r\n        <option value=\"45\" selected>45+</option>\r\n      </select>\r\n    </div>\r\n    <div>\r\n        Refresh Time Duration (in Sec)\r\n        <input type=\"number\" name=\"time\" #time>\r\n    </div>\r\n    <button class=\"update-btn\"\r\n      (click)=\"reloadTable(dose.value, age.value, dmy.valueAsDate, district.value, time.value)\">Update</button>\r\n  </div>\r\n  <div class=\"table-container\">\r\n    <table border=\"1\">\r\n      <tr>\r\n        <th>Date</th>\r\n        <td>{{selectedDate}}</td>\r\n      </tr>\r\n      <tr>\r\n        <th>Age</th>\r\n        <td>{{selectedAge}}+</td>\r\n      </tr>\r\n      <tr>\r\n        <th>Dose</th>\r\n        <td>Dose {{selectedDose}}</td>\r\n      </tr>\r\n      <tr>\r\n        <th>District</th>\r\n        <td>{{districtList[selectedDist].name}}</td>\r\n      </tr>\r\n      <tr>\r\n        <th>Refresh time</th>\r\n        <td>{{refreshTime}} sec</td>\r\n      </tr>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Address</th>\r\n        <th>Pincode</th>\r\n        <th>Type</th>\r\n        <th>Count</th>\r\n      </tr>\r\n      <tr *ngFor=\"let data of dataList\">\r\n        <td>{{data.name}}</td>\r\n        <td>{{data.address}}</td>\r\n        <td>{{data.pincode}}</td>\r\n        <td>{{data.type}}</td>\r\n        <td>{{data.count}}</td>\r\n      </tr>\r\n    </table>\r\n  </div>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}